name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
        compiler:
          - gcc-11
          - llvm-13.0.0
        build_type:
          - Debug
          - Release

        include:
          - os: windows-2022
            compiler: msvc
            build_type: Debug

          - os: windows-2022
            compiler: msvc
            build_type: Release


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # - name: Setup Cache
      #   uses: actions/setup_cache
      #   with:
      #     compiler: ${{ matrix.compiler }}
      #     build_type: ${{ matrix.build_type }}
      #     generator: ${{ matrix.generator }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}

          cmake: true
          ninja: true

      - name: Configure CMake
        run: cmake -B ./build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

      - name: Build
        run: cmake --build ./build/test --config ${{matrix.build_type}}

      - name: Run Tests
        working-directory: ./build/test
        run: ctest -C ${{matrix.build_type}}
          

      # gcovr -j ${{env.nproc}} --delete --root ../../ --print-summary --xml-pretty --xml coverage.xml . --gcov-executable '${{ matrix.gcov_executable }}'

      # - name: Publish to codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     flags: ${{ runner.os }}
      #     name: ${{ runner.os }}-coverage
      #     files: ./build/coverage.xml